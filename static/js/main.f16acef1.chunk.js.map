{"version":3,"sources":["Components/ThreeButton.tsx","Components/Dropdown.tsx","Components/Mathjax.tsx","Components/ResultBox.tsx","Components/Textbox.tsx","Components/MainArea.tsx","App.tsx","reportWebVitals.ts","Themes.ts","index.tsx"],"names":["ThreeButton","withStyles","theme","createStyles","Button","width","cursor","fontWeight","props","Box","display","justifyContent","ButtonGroup","disableElevation","size","aria-label","variant","selectedElement","className","classes","color","onClick","setSelectedElement","names","style","Dropdown","useState","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClose","event","current","contains","target","ref","console","info","options","aria-controls","undefined","aria-expanded","aria-haspopup","prevOpen","ArrowDropDown","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","id","map","option","index","MenuItem","selected","handleMenuItemClick","config","tex","packages","inlineMath","displayMath","startup","typeset","Mathjax","fontSize","MathJaxComp","onError","error","hideUntilTypeset","MathJaxCompChild","latex","mjContext","useContext","MathJaxBaseContext","mathBlock","useEffect","promise","then","mathJax","typesetClear","typesetPromise","ResultBox","Card","CardContent","equation","CardActions","Textbox","TextField","margin","internalTextFieldState","setInternalTextFieldState","onSubmit","num","preventDefault","log","Number","setState","FormControl","InputLabel","htmlFor","OutlinedInput","onChange","value","label","RootDiv","height","background","padding","MainArea","input","selectedMode","setSelectedMode","selectedGranularity","setSelectedGranularity","enteredNumber","setEnteredNumber","manager","useMemo","IrrationalManager","calculated_irrational","find_best_fraction","flexDirection","flexGrow","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","main","blue","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f16acef1.chunk.js","sourcesContent":["import { ButtonGroup, Button, WithStyles, Box } from \"@material-ui/core\";\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    Button: {\n      width: \"fit-content\",\n      cursor: \"pointer\",\n      fontWeight: \"bold\",\n    },\n  });\n\ninterface ThreeButtonProps extends WithStyles<typeof styles> {\n  selectedElement: number;\n  setSelectedElement: CallableFunction;\n  names: [string, string, string];\n}\n\nfunction ThreeButtonUnstyled(props: ThreeButtonProps) {\n  return (\n    <div>\n      <Box display={\"flex\"} justifyContent={\"flex-start\"}>\n        <ButtonGroup\n          disableElevation\n          size={\"small\"}\n          aria-label=\"outlined primary button group\"\n        >\n          <Button\n            variant={props.selectedElement === 0 ? \"contained\" : \"outlined\"}\n            className={props.classes.Button}\n            color={props.selectedElement === 0 ? \"primary\" : \"default\"}\n            onClick={() => props.setSelectedElement(0)}\n          >\n            {props.names[0]}\n          </Button>\n          <Button\n            variant={props.selectedElement === 1 ? \"contained\" : \"outlined\"}\n            className={props.classes.Button}\n            color={props.selectedElement === 1 ? \"primary\" : \"default\"}\n            onClick={() => props.setSelectedElement(1)}\n          >\n            {props.names[1]}\n          </Button>\n          <Button\n            variant={props.selectedElement === 2 ? \"contained\" : \"outlined\"}\n            className={props.classes.Button}\n            color={props.selectedElement === 2 ? \"primary\" : \"default\"}\n            onClick={() => props.setSelectedElement(2)}\n          >\n            {props.names[2]}\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </div>\n  );\n}\n\nconst ThreeButton = withStyles(styles)(ThreeButtonUnstyled);\n\nexport { ThreeButton };\n","import { MouseEvent, useRef, useState } from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  ClickAwayListener,\n  Grow,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n  WithStyles\n} from \"@material-ui/core\";\nimport { ArrowDropDown } from \"@material-ui/icons\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst style = createStyles({});\n\ninterface DropdownProps extends WithStyles<typeof style> {\n  options: string[];\n}\n\nfunction DropdownUnstyled(props: DropdownProps) {\n  const [open, setOpen] = useState(false);\n  const anchorRef = useRef<HTMLDivElement>(null);\n  const [selectedIndex, setSelectedIndex] = useState(1);\n\n  function handleClick() {\n    console.info(`You clicked ${props.options[selectedIndex]}`);\n  }\n\n  function handleMenuItemClick(\n    event: MouseEvent<HTMLLIElement, MouseEvent>,\n    index: number\n  ) {\n    setSelectedIndex(index);\n    setOpen(false);\n  }\n\n  function handleToggle() {\n    setOpen((prevOpen) => !prevOpen);\n  }\n\n  function handleClose(event: MouseEvent<Document, MouseEvent>) {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return;\n    }\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <ButtonGroup\n        variant=\"outlined\"\n        color=\"default\"\n        ref={anchorRef}\n        aria-label=\"split button\"\n        size={\"small\"}\n        disableElevation\n      >\n        <Button onClick={handleClick}>{props.options[selectedIndex]}</Button>\n        <Button\n          aria-controls={open ? \"split-button-menu\" : undefined}\n          aria-expanded={open ? \"true\" : undefined}\n          aria-label=\"select export mode\"\n          aria-haspopup=\"menu\"\n          onClick={handleToggle}\n        >\n          <ArrowDropDown />\n        </Button>\n      </ButtonGroup>\n      {/* eslint-disable-next-line react/jsx-no-undef */}\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n        {({ TransitionProps, placement }) => (\n            <Grow\n                {...TransitionProps}\n                style={{\n                  transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n                }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose as any}>\n                  <MenuList id=\"split-button-menu\">\n                    {props.options.map((option, index) => (\n                        <MenuItem\n                            key={option}\n                            selected={index === selectedIndex}\n                            onClick={(event) => handleMenuItemClick(event as any, index)}\n                        >\n                          {option}\n                        </MenuItem>\n                    ))}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n        )}\n      </Popper>\n    </div>\n  );\n}\n\nconst Dropdown = withStyles(style)(DropdownUnstyled);\n\nexport { Dropdown };\n","import {\n  MathJaxContext,\n  MathJax,\n  MathJax3Config,\n  MathJaxBaseContext,\n  MathJax2Object,\n  MathJax3Object,\n} from \"better-react-mathjax\";\nimport { Box, makeStyles, WithStyles } from \"@material-ui/core\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport {useContext, useEffect, useRef} from \"react\";\n\nconst config: MathJax3Config = {\n  tex: {\n    packages: { \"[+]\": [\"html\"] },\n    inlineMath: [\n        [\"$\", \"$\"]\n    ],\n    displayMath: [\n      [\"$$\", \"$$\"],\n    ]\n  },\n  startup: {\n    typeset: false,\n  }\n};\n\nconst style = createStyles({\n  Mathjax: {\n    fontSize: \"2em\"\n  },\n});\n\ninterface MathJaxCompProps extends WithStyles<typeof style> {\n  latex: string;\n}\n\nfunction MathJaxCompUnstyled(props: MathJaxCompProps) {\n  return (\n    <div>\n      <MathJaxContext\n        onError={(error) =>\n          console.error(\"Mathjax has failed to load!\" + error)\n        }\n        config={config}\n        hideUntilTypeset={\"every\"}\n      >\n        <Box display={\"flex\"} justifyContent={\"center\"}>\n          <MathJaxCompChild latex={props.latex} />\n        </Box>\n      </MathJaxContext>\n    </div>\n  );\n}\n\nfunction MathJaxCompChildUnstyled(props: MathJaxCompProps) {\n  const mjContext = useContext(MathJaxBaseContext);\n  const mathBlock = useRef(null);\n\n\n  useEffect(() => {\n    if (mjContext && mathBlock) {\n      mjContext.promise.then((mathJax: any) => {\n        mathJax.startup.promise.then(() => {\n          mathJax.typesetClear([mathBlock.current]);\n          mathJax.typesetPromise([mathBlock.current]);\n        });\n      });\n    }\n  });\n\n  return (\n    <div className={props.classes.Mathjax} ref={mathBlock}>\n      {`$${props.latex}$`}\n    </div>\n  );\n}\n\nconst MathJaxComp = withStyles(style)(MathJaxCompUnstyled);\nconst MathJaxCompChild = withStyles(style)(MathJaxCompChildUnstyled);\n\nexport { MathJaxComp };\n","import {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n} from \"@material-ui/core\";\nimport {Dropdown} from \"./Dropdown\";\nimport {MathJaxComp} from \"./Mathjax\";\n\n\ninterface ResultBoxProps {\n  equation: string;\n}\n\nexport function ResultBox(props: ResultBoxProps) {\n  return (\n    <Box display={\"flex\"} justifyContent={\"center\"}>\n      <Card>\n        <CardContent>\n          <MathJaxComp latex={props.equation} />\n        </CardContent>\n        <CardActions>\n          <Dropdown options={['Latex', 'Python', 'Unicode']} />\n        </CardActions>\n      </Card>\n    </Box>\n  );\n}\n","import styled from \"styled-components\";\nimport {\n  Box,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  TextField,\n  WithStyles,\n} from \"@material-ui/core\";\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    TextField: {\n      \"&[type=number]\": {\n        \"-moz-appearance\": \"textfield\",\n      },\n      \"&::-webkit-outer-spin-button\": {\n        \"-webkit-appearance\": \"none\",\n        margin: 0,\n      },\n      \"&::-webkit-inner-spin-button\": {\n        \"-webkit-appearance\": \"none\",\n        margin: 0,\n      },\n    },\n  });\n\ninterface TextboxProps extends WithStyles<typeof styles> {\n  setState: React.Dispatch<number | undefined>;\n}\n\nfunction TextboxUnstyled(props: TextboxProps) {\n  const [internalTextFieldState, setInternalTextFieldState] = useState(\"\");\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    console.log(internalTextFieldState)\n    let num\n    if ((num = Number(internalTextFieldState)) !== 0 || num !== undefined)\n    props.setState(num);\n  }\n\n  return (\n    <Box display={\"flex\"} justifyContent={\"center\"}>\n      <form onSubmit={handleSubmit}>\n        <FormControl variant=\"outlined\" className={props.classes.TextField}>\n          <InputLabel htmlFor=\"component-outlined\">Number</InputLabel>\n          <OutlinedInput\n            id=\"component-outlined\"\n            onChange={(event) => setInternalTextFieldState(event.target.value)}\n            label=\"Number\"\n          />\n        </FormControl>\n        {/*<TextField*/}\n        {/*  id=\"standard-basic\"*/}\n        {/*  label=\"Number\"*/}\n        {/*  type={\"Number\"}*/}\n        {/*  variant={\"outlined\"}*/}\n        {/*  onChange={}*/}\n        {/*  Input={}*/}\n        {/*/>*/}\n      </form>\n    </Box>\n  );\n}\n\nconst Textbox = withStyles(styles)(TextboxUnstyled);\n\nexport { Textbox };\n","import { ThreeButton } from \"./ThreeButton\";\nimport { ResultBox } from \"./ResultBox\";\nimport { Textbox } from \"./Textbox\";\nimport { Box, WithStyles } from \"@material-ui/core\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useMemo, useState } from \"react\";\nimport { IrrationalManager } from \"whatsthatnumber-lib\";\nimport { ProcessNumberResultsItem } from \"whatsthatnumber-lib/dist/Utils\";\n\nconst style = createStyles({\n  RootDiv: {\n    margin: 50,\n    width: 500,\n    height: 400,\n    background: \"lightcyan\",\n    padding: 7,\n  },\n});\n\nfunction MainAreaUnstyled(props: WithStyles<typeof style>) {\n  const modes: [string, string, string] = [\"Default\", \"Calculus\", \"Polar\"];\n  const [selectedMode, setSelectedMode] = useState<0 | 1 | 2>(0);\n\n  const granularities: [string, string, string] = [\"Coarse\", \"Normal\", \"Fine\"];\n  const [selectedGranularity, setSelectedGranularity] = useState<0 | 1 | 2>(1);\n\n  const [enteredNumber, setEnteredNumber] =\n    useState<number | undefined>(undefined);\n\n  const manager = useMemo(() => new IrrationalManager(false, \"latex\"), []);\n  const calculated_irrational = useMemo(() => {\n    if (enteredNumber === 0)\n      return undefined\n    if (enteredNumber !== undefined)\n      return manager.find_best_fraction(enteredNumber);\n  }, [manager, enteredNumber]);\n\n  function ChooseResultBox(input: ProcessNumberResultsItem | undefined) {\n    console.log(input)\n    if (input === undefined || typeof input[0] !== \"string\")\n      return <ResultBox equation={\"???\"} />\n    else\n      return <ResultBox equation={input[0]} />\n  }\n\n  return (\n    <Box className={props.classes.RootDiv}>\n      <Box display={\"flex\"} flexDirection={\"column\"} height={\"100%\"}>\n        <Box\n          display={\"flex\"}\n          flexDirection={\"row\"}\n          justifyContent={\"space-between\"}\n        >\n          <ThreeButton\n            selectedElement={selectedMode}\n            setSelectedElement={setSelectedMode}\n            names={modes}\n          />\n          <ThreeButton\n            selectedElement={selectedGranularity}\n            setSelectedElement={setSelectedGranularity}\n            names={granularities}\n          />\n        </Box>\n        <Box\n          flexGrow={3}\n          display={\"flex\"}\n          justifyContent={\"center\"}\n          flexDirection={\"column\"}\n        >\n          <Textbox setState={setEnteredNumber} />\n        </Box>\n        <Box\n          flexGrow={5}\n          display={\"flex\"}\n          justifyContent={\"center\"}\n          flexDirection={\"column\"}\n        >\n          {ChooseResultBox(calculated_irrational)}\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nconst MainArea = withStyles(style)(MainAreaUnstyled);\n\nexport { MainArea };\n","import {MainArea} from \"./Components/MainArea\";\n\n\nexport function App() {\n  return (\n    <div>\n      <MainArea />\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[200]\r\n    }\r\n  }\r\n})\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./Themes\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}